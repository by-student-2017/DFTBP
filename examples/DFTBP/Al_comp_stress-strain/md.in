#Input example Generated by GS JUNG@ornl 
# --------------------------------------------------------------------
# Input file for uniaxial compressive loading of single crystal aluminum
# Mark Tschopp, November 2010

# ------------------------ INITIALIZATION ----------------------------
units           metal
dimension       3
boundary        p p p 

atom_style      full
atom_modify     sort 0 0.0    # turn off sorting of the coordinates

# ----------------------- ATOM DEFINITION ----------------------------
#variable latparam equal 4.05

#lattice         fcc ${latparam}
#region          whole block 0 3 0 3 0 3
#create_box      1 whole

#region          upper block INF INF INF INF INF INF units box 
#lattice         fcc ${latparam} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
#create_atoms    1 region upper

#set             region upper type/fraction 1 1.0 12393
#set             type 1 charge 0.0
#mass            1 26.98

#write_data      structure.data
# Please note that if you use the comment in the first line output by 
# "write_data" as is, the calculation will not run. It is no good if the cell size is too large. 
# It is best to make it about 3x3x3. This size makes SQS suitable for experiments.

# ----------------------- Read Structure file ------------------------
read_data       structure.data

variable        elems string "Al"
group           Al type 1

# ------------------------ initialize system -------------------------

variable         Td equal 300.0 # [K]

velocity        all create ${Td} 12345 mom yes rot no

# ------------------------ FORCE FIELDS ------------------------------
pair_style      zero 1.0
pair_coeff      * *

# ------------------------- SETTINGS ---------------------------------
neighbor        1.0 bin
neigh_modify    every 1 delay 0 check yes

variable        dt equal 0.001 # 1.0 [fs]
timestep        ${dt}

# Use cfg for Ovito or AtomEye
dump            d1 all cfg 10 cfg/dump.comp_*.cfg mass type xs ys zs fx fy fz
dump_modify     d1 element ${elems}

# Store final cell length for strain calculations
variable        tmp equal "lx"
variable        L0 equal ${tmp}
print           "Initial Length, L0: ${L0}"

# ------------------------- DEFORMATION ---------------------------------

# Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p2, p3, p4 are in GPa
variable strain equal "(lx - v_L0)/v_L0"
variable p1 equal "v_strain"
variable p2 equal "-pxx/10000"
variable p3 equal "-pyy/10000"
variable p4 equal "-pzz/10000"
fix def1 all print 10 "${p1} ${p2} ${p3} ${p4}" file comp_100.def1.txt screen no

# Display thermo
thermo          10
thermo_style    custom step v_strain temp v_p2 v_p3 v_p4 ke pe press
thermo_modify   norm no flush yes

# ------------------------- SETTINGS ---------------------------------

fix             integ   all nve
fix             therm   all langevin ${Td} ${Td} $(1000.0*dt) 699483
#fix             f1 all nvt temp ${Td} ${Td} $(1000.0*dt)
#fix             f1 all npt temp ${Td} ${Td} $(1000.0*dt) y 1.0 1.0 $(1000.0*dt) z 1.0 1.0 $(1000.0*dt) drag 1

variable        srate equal 1.0e10
variable        srate1 equal "-v_srate / 1.0e12"
fix             f2 all deform 1 x erate ${srate1} units box remap x

fix             f3 all dftbp dftb_in.hsd NULL
fix_modify      f3 energy yes # "energy yes" or "virial yes"

run             200

# ------------------------- Ende -------------------------------------